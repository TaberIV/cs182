/* Brendan Von Hofe and Taber McFarlin
 * "I pledge my honor I have abided by the Stevens Honor System."
 * 
 * 
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "SIdict.h"

typedef struct node* Node;
struct node {
  float weight;
  int target;
  Node next;
};

struct si_dict {
  Node front;
};

SIdict makeSIdict() {
  SIdict d = (SIdict) malloc(sizeof(struct si_dict));
    d->front = NULL;
    return d;
}

int addOrUpdate(SIdict dict, char* key, int val) {
    Node current = dict->front;
    while(current != NULL && strcmp(current->key, key) != 0) {
        current = current->next;
    }
    if(current == NULL) {
        Node n = (Node) malloc(sizeof(struct node));
        n->val = val;
        n->key = key;
        n->next = dict->front;
        dict->front = n;
        return 0;
    }
    else {
        current->val = val;
        return 1;
    }
}

int lookup(SIdict dict, char* key) {
    Node current = dict->front;
    while(strcmp(current->key, key) != 0) {
        current = current->next;
    }
    return current->val;
}

int remKey(SIdict dict, char* key) {
    Node current = dict->front;
    Node prev = NULL;
    while(current != NULL && strcmp(current->key, key) != 0) {
        prev = current;
        current = current->next;
    }
    if(current == NULL) return 0;
    else if (prev == NULL) {
        dict->front = dict->front->next;
        free(current);
    }
    else {
        prev->next = current->next;
        free(current);
    }
    return 1;
}
